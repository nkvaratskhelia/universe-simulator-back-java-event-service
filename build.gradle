plugins {
	id 'java'
	id 'idea'
	id 'jacoco'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.boot' version '2.4.5'
}

group = 'com.example.universe.simulator'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '11'

idea {
	module {
		downloadJavadoc = true
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

test {
	useJUnitPlatform()
}

jacocoTestCoverageVerification {
	dependsOn test
	afterEvaluate {
		jacocoExclusions(classDirectories)
	}

	violationRules {
		rule {
			limit {
				minimum = 1
			}
		}
	}
}

private jacocoExclusions(classDirectories) {
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				'com/example/universe/simulator/eventservice/EventServiceApplication.class'
		])
	}))
}

jacocoTestReport {
	dependsOn test
	afterEvaluate {
		jacocoExclusions(classDirectories)
	}
}

bootBuildImage {
	imageName = "universesimulator/${project.name}"
	publish = true
	docker {
		publishRegistry {
			username = System.getenv('US_DOCKER_REGISTRY_USER')
			password = System.getenv('US_DOCKER_REGISTRY_PASSWORD')
		}
	}
}


repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.1'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	runtimeOnly 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	runtimeOnly 'org.springframework.cloud:spring-cloud-starter-sleuth'
	runtimeOnly 'org.springframework.cloud:spring-cloud-starter-vault-config'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'io.projectreactor:reactor-test'
}
